% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FindPeek.R
\name{FindPeek}
\alias{FindPeek}
\title{Find peak areas in location series}
\usage{
FindPeek(value, ConDistCut = 6, AdmitCut = 2, Shape = 0.1,
  CutMethod = T, CutMethodValue = NULL)
}
\arguments{
\item{value}{Numeric vector. Value that you want to find peek}

\item{ConDistCut}{Integer. Cutoff of continuely point. If CutMethod is TRUE, this argument means how
many continuely point above cutoff.If CutMethod is FALSE, this argument means how many continuely rise point,}

\item{AdmitCut}{Integer. Cutoff of admitted number of miscontinuely point in continuely point.}

\item{Shape}{Numeric. Should be between 0 to 1, select how high the peek should be. If Cutmethod is TRUE, then
the CutMethodValue equal to max(value) * Shape. Else}

\item{CutMethod}{Logical.Use cut method instead of increase method}

\item{CutMethodValue}{Numeric. Cut method using value, default is NULL, using shape}
}
\value{
List. Including index of peek, upper boundary , lower boundary.
}
\description{
Find peak or signal areas in location series without noise
}
\details{
The first method is to judge the region as a peak according to the continuous rise and fall.
The second method is to give a background value (CutMethod = T). If it is higher than the background
 value continuously, the region is considered as a peak. The background value can be given manually or
 automatically generated according to the maximum value.
}
\examples{
test <- data.table(Chr=paste0("chr", rep(1, length=250)),Start=as.integer(seq(1, 100, length.out = 250)), End=as.integer(seq(5, 250, length.out = 250)), Value=c(rep(0.01, 50),dnorm(sort(rnorm(100,0,3)),0,3), dnorm(sort(rnorm(100)))))
Peek_dt <- FindPeek(test$Value)
Start_End <- data.table(Start = Peek_dt$Peek - Peek_dt$ContDistLeft + 1, End = Peek_dt$Peek + Peek_dt$ContDistRight -1, Peek = Peek_dt$Peek)

# generate wig
wig_dt <- data.table(Chr= test[Start_End$Start, Chr], Start = test[Start_End$Start,  Start], End = test[Start_End$End, End], Value=test[Start_End$Peek, Value])

# remove cross chromosome and ramdom
wig_dt <- wig_dt[End > Start,][!Chr \%like\% "rand" ]
}
